// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "04/11/2018 21:37:39"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module contador_divfreq (
	q500khz,
	clk_1khz,
	cin);
output 	[1:0] q500khz;
input 	clk_1khz;
input 	cin;

// Design Ports Information
// q500khz[1]	=>  Location: PIN_C12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q500khz[0]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cin	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk_1khz	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \q500khz[1]~output_o ;
wire \q500khz[0]~output_o ;
wire \clk_1khz~input_o ;
wire \cin~input_o ;
wire \inst|LPM_COUNTER_component|auto_generated|trigger_mux_w[0]~0_combout ;
wire [1:0] \inst|LPM_COUNTER_component|auto_generated|counter_reg_bit ;


// Location: IOOBUF_X31_Y31_N9
cycloneiv_io_obuf \q500khz[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q500khz[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \q500khz[1]~output .bus_hold = "false";
defparam \q500khz[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N2
cycloneiv_io_obuf \q500khz[0]~output (
	.i(\inst|LPM_COUNTER_component|auto_generated|counter_reg_bit [0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q500khz[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \q500khz[0]~output .bus_hold = "false";
defparam \q500khz[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N8
cycloneiv_io_ibuf \clk_1khz~input (
	.i(clk_1khz),
	.ibar(gnd),
	.o(\clk_1khz~input_o ));
// synopsys translate_off
defparam \clk_1khz~input .bus_hold = "false";
defparam \clk_1khz~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N1
cycloneiv_io_ibuf \cin~input (
	.i(cin),
	.ibar(gnd),
	.o(\cin~input_o ));
// synopsys translate_off
defparam \cin~input .bus_hold = "false";
defparam \cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X14_Y1_N28
cycloneiv_lcell_comb \inst|LPM_COUNTER_component|auto_generated|trigger_mux_w[0]~0 (
// Equation(s):
// \inst|LPM_COUNTER_component|auto_generated|trigger_mux_w[0]~0_combout  = \inst|LPM_COUNTER_component|auto_generated|counter_reg_bit [0] $ (\cin~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst|LPM_COUNTER_component|auto_generated|counter_reg_bit [0]),
	.datad(\cin~input_o ),
	.cin(gnd),
	.combout(\inst|LPM_COUNTER_component|auto_generated|trigger_mux_w[0]~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|LPM_COUNTER_component|auto_generated|trigger_mux_w[0]~0 .lut_mask = 16'h0FF0;
defparam \inst|LPM_COUNTER_component|auto_generated|trigger_mux_w[0]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X14_Y1_N29
dffeas \inst|LPM_COUNTER_component|auto_generated|counter_reg_bit[0] (
	.clk(\clk_1khz~input_o ),
	.d(\inst|LPM_COUNTER_component|auto_generated|trigger_mux_w[0]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|LPM_COUNTER_component|auto_generated|counter_reg_bit [0]),
	.prn(vcc));
// synopsys translate_off
defparam \inst|LPM_COUNTER_component|auto_generated|counter_reg_bit[0] .is_wysiwyg = "true";
defparam \inst|LPM_COUNTER_component|auto_generated|counter_reg_bit[0] .power_up = "low";
// synopsys translate_on

assign q500khz[1] = \q500khz[1]~output_o ;

assign q500khz[0] = \q500khz[0]~output_o ;

endmodule
